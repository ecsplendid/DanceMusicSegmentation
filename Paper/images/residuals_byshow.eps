%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Microsoft Windows 8.1 Pro.
%%Title: E:\DJTestBed\DanceMusicSegmentation\Matlab\figures\residuals_byshow.eps
%%CreationDate: 10/02/2014  13:32:52
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    83   214   510   626
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    83   214   510   626
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0996 7512 csm

    0     0  5135  4934 rc
87 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5136 4935 rf
6 w
0 3980 3980 0 0 -3980 667 4370 4 MP
PP
-3980 0 0 3980 3980 0 0 -3980 667 4370 5 MP stroke
4 w
DO
0 sg
 667 4370 mt  667  390 L
 667  390 mt  667  390 L
1331 4370 mt 1331  390 L
1331  390 mt 1331  390 L
1994 4370 mt 1994  390 L
1994  390 mt 1994  390 L
2657 4370 mt 2657  390 L
2657  390 mt 2657  390 L
3320 4370 mt 3320  390 L
3320  390 mt 3320  390 L
3983 4370 mt 3983  390 L
3983  390 mt 3983  390 L
4647 4370 mt 4647  390 L
4647  390 mt 4647  390 L
 667 4370 mt 4647 4370 L
4647 4370 mt 4647 4370 L
 667 3648 mt 4647 3648 L
4647 3648 mt 4647 3648 L
 667 2926 mt 4647 2926 L
4647 2926 mt 4647 2926 L
 667 2204 mt 4647 2204 L
4647 2204 mt 4647 2204 L
 667 1482 mt 4647 1482 L
4647 1482 mt 4647 1482 L
 667  761 mt 4647  761 L
4647  761 mt 4647  761 L
SO
6 w
 667  390 mt 4647  390 L
 667 4370 mt 4647 4370 L
4647 4370 mt 4647  390 L
 667 4370 mt  667  390 L
 667 4370 mt 4647 4370 L
 667 4370 mt  667  390 L
 667 4370 mt  667 4330 L
 667  390 mt  667  430 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 531 4515 mt 
(-60) s
1331 4370 mt 1331 4330 L
1331  390 mt 1331  430 L
1195 4515 mt 
(-40) s
1994 4370 mt 1994 4330 L
1994  390 mt 1994  430 L
1858 4515 mt 
(-20) s
2657 4370 mt 2657 4330 L
2657  390 mt 2657  430 L
2624 4515 mt 
(0) s
3320 4370 mt 3320 4330 L
3320  390 mt 3320  430 L
3254 4515 mt 
(20) s
3983 4370 mt 3983 4330 L
3983  390 mt 3983  430 L
3917 4515 mt 
(40) s
4647 4370 mt 4647 4330 L
4647  390 mt 4647  430 L
4581 4515 mt 
(60) s
 667 4370 mt  707 4370 L
4647 4370 mt 4607 4370 L
 567 4414 mt 
(0) s
 667 3648 mt  707 3648 L
4647 3648 mt 4607 3648 L
 467 3692 mt 
(0.5) s
 667 2926 mt  707 2926 L
4647 2926 mt 4607 2926 L
 567 2970 mt 
(1) s
 667 2204 mt  707 2204 L
4647 2204 mt 4607 2204 L
 467 2248 mt 
(1.5) s
 667 1482 mt  707 1482 L
4647 1482 mt 4607 1482 L
 567 1526 mt 
(2) s
 667  761 mt  707  761 L
4647  761 mt 4607  761 L
 467  805 mt 
(2.5) s
 667  390 mt 4647  390 L
 667 4370 mt 4647 4370 L
4647 4370 mt 4647  390 L
 667 4370 mt  667  390 L
gs 668 390 3980 3981 rc
36 w
34 4 33 18 33 19 33 -19 33 -18 33 0 34 18 33 19 
33 -19 33 -18 33 0 33 18 34 19 33 -16 33 0 33 16 
33 -19 33 -18 34 -4 33 0 33 0 33 4 33 31 33 92 
33 59 34 -74 33 -59 33 -31 33 -18 33 -4 33 7 34 40 
33 59 33 0 33 -37 33 -44 33 -18 34 15 33 35 33 83 
33 145 33 65 33 60 33 176 34 244 33 44 33 78 33 264 
33 442 33 546 34 285 33 -31 33 180 33 506 33 351 33 -93 
34 -82 33 347 33 181 33 -289 33 -490 33 -613 33 -797 34 -415 
33 -144 33 -52 33 15 33 80 33 62 34 0 33 -24 33 6 
33 30 33 -123 33 -19 34 -22 33 -228 33 -65 33 -17 33 -82 
33 -65 33 30 34 6 33 9 33 -25 33 -138 33 90 33 227 
34 32 33 -183 33 -210 33 -198 33 -77 33 36 34 40 33 -70 
33 0 33 34 33 0 33 0 33 -62 34 -15 33 12 33 21 
33 -3 33 -37 33 -18 34 12 33 0 33 -40 33 -16 33 12 
33 22 34 -22 33 -18 33 -25 33 -18 33 0 33 18 33 19 
668 4329 121 MP stroke
24 w
34 0 33 0 33 0 33 0 33 0 33 0 34 0 33 0 
33 0 33 0 33 0 33 0 34 0 33 0 33 0 33 2 
33 6 33 7 34 1 33 8 33 6 33 0 33 -3 33 11 
33 21 34 -7 33 -2 33 5 33 27 33 7 33 -13 34 -13 
33 -10 33 41 33 48 33 -11 33 -18 34 30 33 7 33 1 
33 26 33 38 33 -6 33 -38 34 29 33 82 33 31 33 -22 
33 -5 33 106 34 250 33 256 33 302 33 369 33 343 33 319 
34 193 33 45 33 -18 33 -230 33 -319 33 -204 33 -135 34 -60 
33 23 33 40 33 -55 33 -87 33 -13 34 83 33 56 33 -168 
33 -339 33 -223 33 -90 34 -15 33 -46 33 -8 33 28 33 -6 
33 70 33 90 34 -26 33 -77 33 -39 33 -45 33 -101 33 -118 
34 -107 33 -96 33 -62 33 -31 33 -17 33 -1 34 -8 33 0 
33 -3 33 -21 33 -24 33 3 33 17 34 -28 33 -32 33 -16 
33 5 33 13 33 -4 34 9 33 25 33 16 33 1 33 3 
33 15 34 29 33 -14 33 -58 33 -24 33 -6 33 -12 33 -7 
668 4368 121 MP stroke
DO
36 w
0.313726 sg
34 -7 33 -23 33 -10 33 -2 33 0 33 0 34 2 33 7 
33 8 33 -8 33 -7 33 -2 34 0 33 0 33 4 33 23 
33 25 33 -6 34 5 33 20 33 19 33 -10 33 -16 33 -34 
33 -17 34 4 33 -6 33 5 33 36 33 24 33 -27 34 -5 
33 27 33 21 33 13 33 28 33 3 34 -20 33 24 33 23 
33 15 33 28 33 48 33 25 34 -11 33 57 33 165 33 309 
33 560 33 653 34 719 33 694 33 121 33 -32 33 196 33 -6 
34 46 33 175 33 -3 33 -498 33 -782 33 -756 33 -506 34 -275 
33 -89 33 -78 33 -107 33 -99 33 -63 34 -54 33 -23 33 28 
33 -91 33 -97 33 -1 34 10 33 -6 33 -23 33 -61 33 27 
33 15 33 -44 34 -1 33 -2 33 -41 33 -13 33 -57 33 -61 
34 -23 33 14 33 2 33 -39 33 -47 33 -7 34 -3 33 -18 
33 25 33 43 33 -5 33 -41 33 -25 34 -10 33 14 33 0 
33 -15 33 0 33 0 34 20 33 29 33 7 33 -36 33 -17 
33 19 34 -7 33 -15 33 -11 33 -8 33 -2 33 -9 33 -7 
668 4368 121 MP stroke
SO
0.501961 sg
34 0 33 0 33 2 33 7 33 12 33 0 34 -12 33 -5 
33 11 33 12 33 -11 33 -6 34 6 33 8 33 19 33 8 
33 -5 33 0 34 0 33 7 33 8 33 15 33 25 33 2 
33 -14 34 -6 33 -6 33 18 33 0 33 -17 33 11 34 3 
33 -16 33 -12 33 18 33 15 33 -25 34 -42 33 7 33 46 
33 14 33 6 33 50 33 20 34 -2 33 36 33 90 33 159 
33 312 33 441 34 553 33 758 33 547 33 171 33 82 33 312 
34 348 33 -133 33 -485 33 -698 33 -862 33 -534 33 -318 34 -222 
33 -149 33 -24 33 10 33 -25 33 4 34 -30 33 -76 33 -16 
33 7 33 5 33 -61 34 -67 33 60 33 58 33 81 33 116 
33 7 33 -65 34 -15 33 15 33 69 33 69 33 -16 33 -86 
34 -117 33 -67 33 -32 33 -36 33 -11 33 10 34 -65 33 -68 
33 9 33 42 33 31 33 -39 33 -60 34 8 33 69 33 29 
33 -52 33 -7 33 15 34 11 33 14 33 -27 33 -17 33 9 
33 -46 34 -13 33 -14 33 -24 33 -7 33 -7 33 -16 33 -67 
668 4316 121 MP stroke
gr

36 w
0.501961 sg
0 sg
2233 4658 mt 
(Error \(Seconds\)) s
 385 3113 mt  -90 rotate
(Normalized Track Instances) s
90 rotate
1251  295 mt 
(Track Error For Mean Score Optimized Cost Matrices) s
 651 4413 mt 
( ) s
4631  432 mt 
( ) s
gs 668 390 3980 3981 rc
24 w
0 -3980 2657 4370 2 MP stroke
6 w
gr

6 w
1 sg
0 626 992 0 0 -626 3595 1076 4 MP
PP
-992 0 0 626 992 0 0 -626 3595 1076 5 MP stroke
4 w
DO
SO
6 w
0 sg
3595  450 mt 4587  450 L
3595 1076 mt 4587 1076 L
4587 1076 mt 4587  450 L
3595 1076 mt 3595  450 L
3595 1076 mt 4587 1076 L
3595 1076 mt 3595  450 L
3595  450 mt 4587  450 L
3595 1076 mt 4587 1076 L
4587 1076 mt 4587  450 L
3595 1076 mt 3595  450 L
4069  584 mt 
(LINDMIK) s
gs 3595 450 993 627 rc
36 w
364 0 3667 542 2 MP stroke
gr

36 w
4069  732 mt 
(MAGIC) s
gs 3595 450 993 627 rc
24 w
364 0 3667 689 2 MP stroke
gr

24 w
4069  879 mt 
(TATW) s
gs 3595 450 993 627 rc
DO
36 w
0.313726 sg
364 0 3667 836 2 MP stroke
SO
gr

36 w
0.313726 sg
0 sg
4069 1027 mt 
(ASOT) s
gs 3595 450 993 627 rc
0.501961 sg
364 0 3667 983 2 MP stroke
6 w
gr

6 w
0.501961 sg

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
